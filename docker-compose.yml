version: "3.9"

services:
  server:
    container_name: server
    build: ./server/.
    ports:
      - "8090:8090"
    networks:
      - books-net

  client:
    container_name: client
    environment:
      SPRING_CONFIG_URI: server
      SPRING_CONFIG_PORT: 8090
      POSTGRES_URL: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      JAVA_OPTS: -XX:+PrintFlagsFinal
    build: ./client/.
    deploy:
      resources:
        limits:
          memory: 800M #MaxHeapSize = 200MB
    ports:
      - "8080:8080"
    depends_on:
      - server
      - postgres
    networks:
      - books-net

  client-no-support:
    container_name: client-no-support
    environment:
      SPRING_CONFIG_URI: server
      SPRING_CONFIG_PORT: 8090
      POSTGRES_URL: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      JAVA_OPTS: -XX:+PrintFlagsFinal -XX:-UseContainerSupport
    build: ./client/.
    deploy:
      resources:
        limits:
          memory: 800M #MaxHeapSize = 3174MB
    ports:
      - "8085:8085"
    depends_on:
      - server
      - postgres
    networks:
      - books-net

  client-8:
    container_name: client-8
    environment:
      SPRING_CONFIG_URI: server
      SPRING_CONFIG_PORT: 8090
      POSTGRES_URL: postgres
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
    build: .
    deploy:
      resources:
        limits:
          memory: 800M #MaxHeapSize = 3174MB
    ports:
      - "8086:8086"
    depends_on:
      - server
      - postgres
    networks:
      - books-net

  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - books-net
    restart:
      unless-stopped

networks:
  books-net: